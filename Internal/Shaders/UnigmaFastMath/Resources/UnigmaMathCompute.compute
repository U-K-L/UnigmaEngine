// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Mul
#pragma kernel Dot
#pragma kernel Sum
#pragma kernel Add

#include "../../ShaderHelpers.hlsl"


StructuredBuffer<float> _inputDataA;
StructuredBuffer<float> _inputDataB;
RWStructuredBuffer<float> _outputData;


int _Cols;
int _Rows;
int _Batch;
int _Transpose; //0 = none, 1 = A, 2 = B, 3 = both.
int _BatchSize;
int _BufferSize;

[numthreads(1,1,1)]
void Mul(uint3 id : SV_DispatchThreadID)
{
	MatrixMultiply(id, _Cols, _inputDataA, _inputDataB, _outputData, _Transpose, _Batch);
}

[numthreads(8, 8, 8)]
void Dot(uint3 id : SV_DispatchThreadID)
{
	FastDotProduct(id, _Cols, _inputDataA, _inputDataB, _outputData);
}

[numthreads(1, 1, 1)]
void Sum(uint3 id : SV_DispatchThreadID)
{
	SumProduct(id, _Cols, _inputDataA, _outputData, _Batch, _BatchSize, _BufferSize);
}

[numthreads(1,1,1)]
void Add(uint3 id : SV_DispatchThreadID)
{
	Add(id, _Cols, _inputDataA, _inputDataB, _outputData);
}
