#pragma kernel BoxBlur
#pragma kernel BoxBlurCollapse

RWTexture2D<float4> _IsometricOutlineColor;
RWTexture2D<float4> _TempTexture;
RWTexture2D<float4> _UnigmaDenoisedGlobalIllumination;
int ScreenWidth;
int ScreenHeight;

[numthreads(8,8,1)]
void BoxBlur (uint3 id : SV_DispatchThreadID)
{

	float4 KernelSum = float4(0, 0, 0, 0);
	//Sample the 3x3 block with current index being in the center.
	for (int x = -4; x <= 4; x++)
	{
		for (int y = -4; y <= 4; y++)
		{
			//Expands the box.
			KernelSum = max(KernelSum, _IsometricOutlineColor[id.xy + int2(x, y)]);
		}
	}
	//_TempTexture[id.xy] = KernelSum;
	float alpha = max(0, KernelSum.w);
	_TempTexture[id.xy] = float4(KernelSum.xyz, alpha);
}

[numthreads(8, 8, 1)]
void BoxBlurCollapse(uint3 id : SV_DispatchThreadID)
{

	float4 KernelSum = float4(0, 0, 0, 0);
	int size = 5;
	for (int x = -size; x <= size; x++)
	{
		for (int y = -size; y <= size; y++)
		{
			//Expands the box.
			KernelSum = max(KernelSum, _UnigmaDenoisedGlobalIllumination[id.xy + int2(x, y)]);
		}
	}
	//_TempTexture[id.xy] = KernelSum;
	float alpha = max(0, KernelSum.w);
	float cuttOff = 0.025;
	_UnigmaDenoisedGlobalIllumination[id.xy] = step(cuttOff, length(KernelSum) / (5*5));
	//_UnigmaDenoisedGlobalIllumination[id.xy] = float4(KernelSum.xyz, alpha);
}